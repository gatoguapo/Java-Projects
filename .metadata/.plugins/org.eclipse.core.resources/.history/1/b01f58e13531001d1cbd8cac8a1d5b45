package Unidad1;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;

import javax.swing.JButton;
import javax.swing.JFrame;

@SuppressWarnings("serial")
public class Caracolinterfaz2 extends JFrame implements ActionListener {
	int n;

	JButton[][] btns;

	public Caracolinterfaz2() {
		super("ESPIRAL");
		HazInterfaz(5);
		HazEscuchas();
	}

	private void HazInterfaz(int n) {
		setSize(500, 500);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setLocationRelativeTo(null);
		setLayout(new GridLayout(0, 5,10,10));

		this.n = n;
		int a = 0;
		int b = n - 1;

		btns = new JButton[n][n];

		for (int j = 0; j < btns.length; j++) {
			for (int i = 0; i < btns.length; i++) {
				btns[i][j] = new JButton();
				add(btns[i][j]);
			}
		}

		setVisible(true);
	}

	private void HazEscuchas() {
		for (int j = 0; j < btns.length; j++) {
			for (int i = 0; i < btns.length; i++)
				btns[i][j].addActionListener(this);
		}
	}

	public static void main(String[] args) {
		new Caracolinterfaz2();

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Random random = new Random();
		int a = 0;
		int b = n - 1;
		int c = n*n;
		Color color = new Color(random.nextInt(256), random.nextInt(256),random.nextInt(256));
		
		
		while (c !=0) {
		// primera fila de izq a der	
		for (int i = a; i <= b; i++) {
			btns[i][a].setBackground(color);
			btns[i][a].update(btns[i][a].getGraphics());
			c--;
			try {
				Thread.sleep(50);
			} catch (Exception ee) {

			}
		}
		// ultima columna arriba a abajo
		for (int i = a+1; i <= b; i++) {
			btns[b][i].setBackground(color);
			btns[b][i].update(btns[b][i].getGraphics());
			c--;
			try {
				Thread.sleep(50);
			} catch (Exception ee) {

			}
		}
		// ultima fila de der a izq
		for (int i = b-1; i >= a; i--) {
			btns[i][b].setBackground(color);
			btns[i][b].update(btns[i][b].getGraphics());
			c--;
			try {
				Thread.sleep(50);
			} catch (Exception ee) {

			}
		}
		// primer columna abajo a arriba
		for (int i = b-1; i >= a+1; i--) {
			btns[a][i].setBackground(color);
			btns[a][i].update(btns[a][i].getGraphics());
			c--;
			try {
				Thread.sleep(50);
			} catch (Exception ee) {
				
			}
		}
		b--;
		a++;
		color = new Color(random.nextInt(256), random.nextInt(256),random.nextInt(256));
		}
	}
}
